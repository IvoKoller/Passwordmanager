{"version":3,"file":"app.js","sources":["src/helpers/context_menu.js","src/helpers/external_links.js","src/reducers/databaseReducer.js","src/themes/lightTheme.js","src/reducers/stateReducer.js","src/reducers/index.js","src/store.js","src/crypto.js","src/actions/databaseActions.js","src/actions/stateActions.js","src/components/pages/database.js","src/components/pages/dashboard.js","src/themes/darkTheme.js","src/components/pages/settings.js","src/components/pages/passwordSection.js","src/components/pages/entry.js","src/components/pages/about.js","src/components/pages/login.js","src/components/pages/setup.js","src/components/dialogs.js","src/components/layout.js","src/app.js"],"sourcesContent":["// This n gives you default context menu (cut, copy, paste)\n// in all input fields and textareas across your app.\n\nimport { remote } from 'electron';\n\nconst Menu = remote.Menu;\nconst MenuItem = remote.MenuItem;\n\nconst isAnyTextSelected = () => {\n  return window.getSelection().toString() !== '';\n};\n\nconst cut = new MenuItem({\n  label: 'Cut',\n  click: () => {\n    document.execCommand('cut');\n  },\n});\n\nconst copy = new MenuItem({\n  label: 'Copy',\n  click: () => {\n    document.execCommand('copy');\n  },\n});\n\nconst paste = new MenuItem({\n  label: 'Paste',\n  click: () => {\n    document.execCommand('paste');\n  },\n});\n\nconst normalMenu = new Menu();\nnormalMenu.append(copy);\n\nconst textEditingMenu = new Menu();\ntextEditingMenu.append(cut);\ntextEditingMenu.append(copy);\ntextEditingMenu.append(paste);\n\ndocument.addEventListener('contextmenu', (event) => {\n  switch (event.target.nodeName) {\n    case 'TEXTAREA':\n    case 'INPUT':\n      event.preventDefault();\n      textEditingMenu.popup(remote.getCurrentWindow());\n      break;\n    default:\n      if (isAnyTextSelected()) {\n        event.preventDefault();\n        normalMenu.popup(remote.getCurrentWindow());\n      }\n  }\n}, false);\n","// Convenient way for opening links in external browser, not in the app.\n// Useful especially if you have a lot of links to deal with.\n//\n// Usage:\n//\n// Every link with class \".js-external-link\" will be opened in external browser.\n// <a class=\"js-external-link\" href=\"http://google.com\">google</a>\n//\n// The same behaviour for many links can be achieved by adding\n// this class to any parent tag of an anchor tag.\n// <p class=\"js-external-link\">\n//    <a href=\"http://google.com\">google</a>\n//    <a href=\"http://bing.com\">bing</a>\n// </p>\n\nimport { shell } from 'electron';\n\nconst supportExternalLinks = (event) => {\n  let href;\n  let isExternal = false;\n\n  const checkDomElement = (element) => {\n    if (element.nodeName === 'A') {\n      href = element.getAttribute('href');\n    }\n    if (element.classList.contains('js-external-link')) {\n      isExternal = true;\n    }\n    if (href && isExternal) {\n      shell.openExternal(href);\n      event.preventDefault();\n    } else if (element.parentElement) {\n      checkDomElement(element.parentElement);\n    }\n  };\n\n  checkDomElement(event.target);\n};\n\ndocument.addEventListener('click', supportExternalLinks, false);\n","\n/**\n* The database reducer is essentially big switch statement, which assigns the\n* action payload to the state object depending on the action type.\n* @return updated state\n*/\n\nexport default function reducer(state={\n        database: [],\n        activeEntry: {_id: null, user: null, url:null, password: null,},\n        securityScore: { score: 0, count: 0, entries: [], },\n        loaded: false,\n    }, action) {\n    switch(action.type){\n        case 'DATABASE_LOADED' : {\n            return {\n                ...state, // never mutate state itself!\n                loaded: action.payload,\n            }\n        }\n        case 'UPDATE_DATABASE' : {\n            return {\n                ...state,\n                database: action.payload,\n            }\n        }\n        case 'ERROR' : {\n            console.log(action.payload);\n            return state;\n        }\n        case 'UPDATE_ACTIVE_ENTRY' : {\n            return {\n                ...state,\n                activeEntry: action.payload,\n            }\n        }\n        case 'UPDATE_SCORE' : {\n            return {\n                ...state,\n                securityScore: action.payload,\n            }\n        }\n    }\n    return state;\n}\n","import {\n  blue500,\n  blue700,\n  blueGrey100,\n  blueGrey500,\n  darkBlack,\n  grey300,\n  lightBlack,\n  pinkA200,\n  white\n} from 'material-ui/styles/colors';\nimport {fade, darken} from 'material-ui/utils/colorManipulator';\n\nexport default {\n  spacing: {\n    iconSize: 24,\n    desktopGutter: 24,\n    desktopGutterMore: 32,\n    desktopGutterLess: 16,\n    desktopGutterMini: 8,\n    desktopKeylineIncrement: 64,\n    desktopDropDownMenuItemHeight: 32,\n    desktopDropDownMenuFontSize: 15,\n    desktopLeftNavMenuItemHeight: 48,\n    desktopSubheaderHeight: 48,\n    desktopToolbarHeight: 56,\n  },\n  fontFamily: 'Roboto, sans-serif',\n  palette: {\n    primary1Color: blue500,\n    primary2Color: blue700,\n    primary3Color: lightBlack,\n    accent1Color: pinkA200,\n    accent2Color: blueGrey100,\n    accent3Color: blueGrey500,\n    textColor: darkBlack,\n    alternateTextColor: white,\n    canvasColor: white,\n    secondaryCanvasColor: darken(white, 0.1),\n    borderColor: grey300,\n    disabledColor: fade( darkBlack, 0.3 ),\n    pickerHeaderColor: blue500,\n  },\n  avatar: {\n    borderColor: null,\n  },\n};\n","import lightTheme from '../themes/lightTheme';\n\n/**\n* The state reducer is essentially big switch statement, which assigns the action\n* payload to the state object depending on the action type.\n* @return updated state\n*/\n\nexport default function reducer(state={\n    darkTheme: false,\n    theme: lightTheme,\n    activePage: {index: 0, title: 'Dashboard'},\n    showSingleEntry: false,\n    showDeleteDialog: false,\n    showNewDialog: false,\n    editing: false,\n    capslock: false,\n    searchQuery: '',\n    searchState: false,\n    hashedMasterPassword: null,\n    }, action) {\n    switch(action.type){\n        case 'THEME' : {\n            return {\n                ...state, // never mutate state itself!\n                darkTheme: action.payload.darkTheme,\n                theme: action.payload.theme,\n            }\n        }\n        case 'SET_ACTIVE_PAGE' : {\n            return {\n                ...state,\n                activePage: {\n                    index: action.payload.index,\n                    title: action.payload.title,\n                }\n            }\n        }\n        case 'DELETE_DIALOG' : {\n            return {\n                ...state,\n                showDeleteDialog: action.payload,\n            }\n        }\n        case 'NEW_DIALOG' : {\n            return {\n                ...state,\n                showNewDialog: action.payload,\n            }\n        }\n        case 'SHOW_SINGLE_ENTRY' : {\n            return {\n                ...state,\n                showSingleEntry: action.payload,\n            }\n        }\n        case 'SET_SEARCH_QUERY' : {\n            return {\n                ...state,\n                searchQuery: action.payload,\n            }\n        }\n        case 'SET_SEARCH_STATE' : {\n            return {\n                ...state,\n                searchState: action.payload,\n            }\n        }\n        case 'EDITING' : {\n            return {\n                ...state,\n                editing: action.payload,\n            }\n        }\n        case 'ERROR' : {\n            console.log(action.payload);\n            return state;\n        }\n        case 'CAPSLOCK' : {\n            return {\n                ...state,\n                capslock: action.payload,\n            }\n        }\n        case 'SET_HASHED_MASTERPASSWORD' : {\n            return {\n                ...state,\n                hashedMasterPassword: action.payload,\n            }\n        }\n\n    }\n    return state;\n}\n","import { combineReducers } from 'redux';\n\nimport database from './databaseReducer';\nimport state from './stateReducer';\n\nexport default combineReducers({\n    state,\n    database,\n})\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/index';\n\nconst middleware = applyMiddleware(thunk, logger);\n\nexport default createStore(reducer, middleware);\n","import crypto from 'crypto';\nimport store from './store';\n\n// larger numbers mean better security, less\nvar config = {\n    // size of the generated hash\n    hashBytes: 32,\n    // larger salt means hashed passwords are more resistant to rainbow table, but\n    // you get diminishing returns pretty fast\n    saltBytes: 16,\n    // more iterations means an attacker has to take longer to brute force an\n    // individual password, so larger is better. however, larger also means longer\n    // to hash the password. tune so that hashing the password takes about a\n    // second\n    iterations: 872791,\n\n    algorithm: 'aes-256-ctr',\n    masterPassword: null,\n};\n\n/**\n* Hash a password using Node's asynchronous pbkdf2 (key derivation) function.\n*\n* Returns a self-contained buffer which can be arbitrarily encoded for storage\n* that contains all the data needed to verify a password.\n*\n* @param {!String} password\n* @param {!function(?Error, ?Buffer=)} callback\n*/\n\nexport function hashPassword(password, callback) {\n    // generate a salt for pbkdf2\n    crypto.randomBytes(config.saltBytes,\n        function(err, salt) {\n            if (err) {\n                return callback(err);\n            }\n\n            crypto.pbkdf2(password, salt, config.iterations, config.hashBytes,\n                function(err, hash) {\n\n                    if (err) {\n                        return callback(err);\n                    }\n\n                    var combined = new Buffer(hash.length + salt.length + 8);\n\n                    // include the size of the salt so that we can, during verification,\n                    // figure out how much of the hash is salt\n                    combined.writeUInt32BE(salt.length, 0, true);\n                    // similarly, include the iteration count\n                    combined.writeUInt32BE(config.iterations, 4, true);\n\n                    salt.copy(combined, 8);\n                    hash.copy(combined, salt.length + 8);\n                    callback(null, combined);\n                }\n            );\n        }\n    );\n}\n\n/**\n* Verify a password using Node's asynchronous pbkdf2 (key derivation) function.\n*\n* Accepts a hash and salt generated by hashPassword, and returns whether the\n* hash matched the password (as a boolean).\n*\n* @param {!String} password\n* @param {!Buffer} combined Buffer containing hash and salt as generated by hashPassword.\n* @param {!function(?Error, !boolean)}\n*/\n\nexport function verifyPassword(password, combined, callback) {\n    // extract the salt and hash from the combined buffer\n    var saltBytes = combined.readUInt32BE(0);\n    var hashBytes = combined.length - saltBytes - 8;\n    var iterations = combined.readUInt32BE(4);\n    var salt = combined.slice(8, saltBytes + 8);\n    var hash = combined.toString('binary', saltBytes + 8);\n\n    // verify the salt and hash against the password\n    crypto.pbkdf2(password, salt, iterations, hashBytes, function(err, verify) {\n        if (err) {\n            return callback(err, false);\n        }\n\n        callback(null, verify.toString('binary') === hash);\n    });\n}\n\nexport function encrypt(text){\n  var cipher = crypto.createCipher('aes-256-ctr', config.masterPassword)\n  var crypted = cipher.update(text,'utf8','hex')\n  crypted += cipher.final('hex');\n  return crypted;\n}\n\nexport function decrypt(text){\n  var decipher = crypto.createDecipher('aes-256-ctr', config.masterPassword)\n  var dec = decipher.update(text,'hex','utf8')\n  dec += decipher.final('utf8');\n  return dec;\n}\n\nexport function setMasterPassword(password){\n    config = {...config, masterPassword: password};\n}\n\n/**\n* Generates a random password, with a default length of 14 characters\n* @ http://www.frontcoded.com/javascript-generate-passwords.html\n* @param numLc Number of lowercase letters to be used (default 4)\n* @param numUc Number of uppercase letters to be used (default 4)\n* @param numDigits Number of digits to be used (default 4)\n* @param numSpecial Number of special characters to be used (default 2)\n* @returns {*|string|String}\n*/\n\nexport function generatePassword(numLc, numUc, numDigits, numSpecial) {\n    numLc = numLc || 4;\n    numUc = numUc || 4;\n    numDigits = numDigits || 4;\n    numSpecial = numSpecial || 2;\n\n    var lcLetters = 'abcdefghijklmnopqrstuvwxyz';\n    var ucLetters = lcLetters.toUpperCase();\n    var numbers = '0123456789';\n    var special = '!?=#*$@+-.()<>';\n\n    var pass = [];\n    for(var i = 0; i < numLc; ++i) { pass.push(getRand(lcLetters)); }\n    for(var i = 0; i < numUc; ++i) { pass.push(getRand(ucLetters)); }\n    for(var i = 0; i < numDigits; ++i) { pass.push(getRand(numbers)); }\n    for(var i = 0; i < numSpecial; ++i) { pass.push(getRand(special)); }\n\n    return shuffle(pass).join('');\n};\n\nfunction getRand(values) {\n    return values.charAt(Math.floor(Math.random() * values.length));\n}\n\n/**\n* Fisher-Yates Shuffle\n* @ https://bost.ocks.org/mike/shuffle/\n* Interesting read: @ https://blog.codinghorror.com/the-danger-of-naivete/\n* @param array An array containg elements to be shuffled (pass by refrence)\n* @return Shuffled array\n*/\n\nfunction shuffle(array) {\n    var m = array.length, t, i;\n    // While there remain elements to shuffle…\n    while (m) {\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n        // And swap it with the current element.\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n    return array;\n}\n","import zxcvbn from 'zxcvbn';\nimport { encrypt, decrypt } from '../crypto';\nimport Datastore from 'nedb';\nvar database;\n\n/*\n* The database reducer handles all requests to the NeDB database.\n*/\n\n\n/**\n* Loads/Creates the database after a masterPassword has been defined.\n* NeDB handles encryption/ decryption automatically using the callback functions\n* defined in 'crypto.js'. The datastore gets loaded automatically and\n* synchronously - requests to the database can be issued immediately.\n*\n* @returns {action} of type 'DATABASE_LOADED', with payload true\n*\n* If store.database.loaded == true, the layout component switches from the login\n* screen to the 'application-home-screen'.\n*/\n\nexport function load(){\n    database = new Datastore({\n       filename: './app/db/database.db',\n       autoload: true,\n       afterSerialization: encrypt,\n       beforeDeserialization: decrypt,\n    });\n\n    return {\n        type: 'DATABASE_LOADED',\n        payload: true,\n    }\n}\n\n/**\n* Fetches data from the database.\n* Fetching from the NeDB database happens asyncronously, as redux works synchronously,\n* the thunk-middleware is utilized.\n*\n* @param {object} query (optional) An object containing the field to query, if\n* left empty, all entries of the database are returned\n*\n* if fetching happens successfully, the function\n* dispatches an action of type 'UPDATE_DATABASE', with an array of the found entries as a payload.\n* Should something go wrong, it dispatches an action of type 'ERROR', with the error as a payload.\n*\n* @returns {dispatchFunction}\n*\n* The dispatch function itself\n* @returns {Promise} In order to issue commands which depend on fetch() having finished\n* see: @ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n*/\n\nexport function fetch(query) {\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            database.find(query, (err, docs)=>{\n                if(err){\n                    dispatch({\n                        type: 'ERROR',\n                        payload: err,\n                    });\n                    reject(err);\n                } else {\n                    dispatch({\n                        type: 'UPDATE_DATABASE',\n                        payload: docs,\n                    });\n                    resolve(docs);\n                }\n            })\n        })\n    }\n}\n\n/**\n* Evaluates the securityScore\n* It checks every password using the zxcvbn() function and adds the resulting scores.\n*\n* If fetching happens successfully, the function dispatches an action\n* of type 'UPDATE_SCORE', with an object containing the score, the number of weak\n* passwords and an array of the corrisponding weak entries as a payload.\n* Should something go wrong, it dispatches an action of type 'ERROR', with the error as a payload.\n* @returns {dispatchFunction}\n*/\n\nexport function evaluate(){\n    return function(dispatch){\n        database.find({}, (err, docs)=>{\n            if(err){\n                dispatch({\n                    type: 'ERROR',\n                    payload: err,\n                });\n            } else {\n                var score = 0, count = 0, entries = [];\n                docs.map((item)=>{\n                    if(item.type == 2){\n                        score += 4;\n                        return;\n                    }\n                    var result = zxcvbn(item.password).score;\n                    if(result < 4){\n                        count++;\n                        entries.push(item);\n                    }\n                    score += result;\n                });\n                const percentage = score / (docs.length * 4);\n                dispatch({\n                    type: 'UPDATE_SCORE',\n                    payload: {\n                        score: percentage,\n                        count: count,\n                        entries: entries,\n                    }\n                });\n            }\n        })\n    }\n}\n\n/**\n* Inserts entry into database\n* @param entry the entry to be inserted\n* @returns {action} of type null, as action doesn't have to change anything\n*/\n\nexport function insert(entry) {\n    database.insert(entry);\n    return { type: null }\n}\n\n/**\n* Updates entry of database\n* @param id id of the entry to be updated\n* @param entry the entry to be updated\n* @returns {action} of type null, as action doesn't have to change anything\n*/\n\nexport function update(id, entry) {\n    database.update({_id: id}, entry);\n    return { type: null }\n}\n\n/**\n* Removes entry of database\n* @param id id of the entry to be deleted\n* @returns {action} of type null, as action doesn't have to change anything\n*/\n\nexport function remove(id) {\n    database.remove({_id: id});\n    return { type: null }\n}\n\n/**\n* Searches entry and sets result as active entry\n* @param id id of the entry to be deleted\n* If fetching happens successfully, the function dispatches an action\n* of type 'UPDATE_ACTIVE_ENTRY', with an the entry as a payload.\n* @returns {dispatchFunction}\n* @returns {Promise} In order to issue commands which depend on fetch() having finished\n*/\n\n\nexport function setActiveEntry(id){\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            database.findOne({_id: id}, (err, doc)=>{\n                if(err){\n                    dispatch({\n                        type: 'ERROR',\n                        payload: err,\n                    });\n                    reject(err);\n                } else {\n                    dispatch({\n                        type: 'UPDATE_ACTIVE_ENTRY',\n                        payload: doc,\n                    });\n                    resolve(doc);\n                }\n            })\n        })\n    }\n}\n\n/**\n* Updates the active entry\n* @param id id of the entry to be deleted\n*\n* @returns {action} of type 'UPDATE_ACTIVE_ENTRY', with the entry as a payload\n*/\n\nexport function updateActiveEntry(entry){\n    return {\n            type: 'UPDATE_ACTIVE_ENTRY',\n            payload: entry,\n        }\n}\n","import { verifyPassword } from '../crypto';\n\n/*\n* The state reducer handles all application state changes.\n*/\n\n/**\n* Sets theme\n* @param theme theme to set\n* @param bool if toggle in settings should be set to true or not\n*\n* @returns {action} of type 'THEME' with the theme and bool as a payload\n*/\n\nexport function setTheme(theme, bool) {\n    return {\n        type: 'THEME',\n        payload: {theme: theme, darkTheme: bool},\n    }\n}\n\n/**\n* Sets active page\n* @param pageNumber page-index\n* @param pageTitle sets page-title\n*\n* @returns {action} of type 'SET_ACTIVE_PAGE' with the page-index and title as a payload\n*/\n\nexport function setActivePage(pageNumber, pageTitle) {\n    return {\n        type: 'SET_ACTIVE_PAGE',\n        payload: {index: pageNumber, title: pageTitle},\n    }\n}\n\n/**\n* Sets application is in edit mode\n* @param bool state to set\n*\n* @returns {action} of type 'EDITING' with boolean as a payload\n*/\n\nexport function editing(bool) {\n    return {\n        type: 'EDITING',\n        payload: bool,\n    }\n}\n\n/**\n* Registers the current state of capslock in the store\n* @param bool capslock state\n*\n* @returns {action} of type 'CAPSLOCK' with boolean as a payload\n*/\n\nexport function capslock(bool) {\n    return {\n        type: 'CAPSLOCK',\n        payload: bool,\n    }\n}\n\n\n/**\n* Sets active page\n* @param pageNumber page-index\n* @param pageTitle sets page-title\n*\n* @returns {action} of type 'SET_ACTIVE_PAGE' with the page-index and title as a payload\n*/\n\nexport function showDeleteDialog(bool) {\n    return {\n        type: 'DELETE_DIALOG',\n        payload: bool,\n    }\n}\n\nexport function showSingleEntry(bool) {\n    return {\n        type: 'SHOW_SINGLE_ENTRY',\n        payload: bool,\n    }\n}\n\nexport function showNewDialog(bool) {\n    return {\n        type: 'NEW_DIALOG',\n        payload: bool,\n    }\n}\n\nexport function setSearchQuery(query) {\n    return {\n        type: 'SET_SEARCH_QUERY',\n        payload: query,\n    }\n}\n\nexport function setSearchState(bool) {\n    return {\n        type: 'SET_SEARCH_STATE',\n        payload: bool,\n    }\n}\nexport function setHashedMasterPassword(password){\n    return {\n        type: 'SET_HASHED_MASTERPASSWORD',\n        payload: password,\n    }\n}\n","import {clipboard} from 'electron';\nimport zxcvbn from 'zxcvbn';\n// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { fetch, insert, remove, setActiveEntry } from '../../actions/databaseActions';\nimport {\n    showDeleteDialog,\n    setActivePage,\n    editing,\n    showSingleEntry,\n    setSearchState,\n} from '../../actions/stateActions';\n\n// React components\nimport {List, ListItem} from 'material-ui/List';\nimport IconButton from 'material-ui/IconButton';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport FontIcon from 'material-ui/FontIcon';\nimport Avatar from 'material-ui/Avatar';\nimport { grey400, red400 } from 'material-ui/styles/colors';\n\n@connect((store) => {\n    return {\n        database: store.database.database,\n        activeEntry: store.database.activeEntry,\n        searchState: store.state.searchState,\n        securityScore: store.database.securityScore,\n    };\n})\n\n/**\n* This component lists the entries of the active database. Just like the entry-component\n* it is thus multi functional. It serves as the representation of the search-results,\n* the bad logins and of course the database itself.\n* If no entries are present, a custom message is shown.\n* Each entry has a menu which offers the user to edit or delete the entry. Additionaly\n* the user can also copy the password. If the user chooses to do this, the password\n* is copied into the clipboard. After 10 secondes, the clipboard is cleared.\n*/\n\nexport default class Database extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.copyPassword = this.copyPassword.bind(this);\n        this.delete = this.delete.bind(this);\n        this.edit = this.edit.bind(this);\n        this.content = this.content.bind(this);\n    }\n\n    //callback for delete menu item\n    delete(event){\n        this.props.dispatch(showDeleteDialog(true));\n        this.props.dispatch(setSearchState(false));\n    }\n\n    //callback for delete menu item\n    edit(){\n        this.props.dispatch(editing(true));\n        this.props.dispatch(showSingleEntry(true));\n        this.props.dispatch(setSearchState(false));\n    }\n\n    //callback for copy-password menu item\n    copyPassword(){\n        function wait(ms) { return new Promise(r => setTimeout(r,ms)); }\n\n        async function copy(password){\n            clipboard.writeText(password); //copy password to clipboard\n            await wait(10000); //start asynchrounous function, 10 second timeout\n            clipboard.writeText(''); //clear clipboard\n        }\n\n        copy(this.props.activeEntry.password);\n    }\n\n    //callback to set active entry\n    setActive(id){\n        this.props.dispatch(setActiveEntry(id));\n    }\n\n    //callback to set active page\n    activePage(id){\n        this.props.dispatch(setActiveEntry(id)).then((doc)=>{\n            this.props.dispatch(showSingleEntry(true));\n        })\n    }\n\n    content(){\n        if(this.props.onlyShowBadLogins && this.props.securityScore.count > 0\n            || this.props.database.length > 0){\n            return(\n                <List>\n                    {this.props.onlyShowBadLogins ?\n                        this.props.securityScore.entries.map((item, index)=>{\n                            return (\n                                <ListItem\n                                    key={index}\n                                    onTouchTap={this.activePage.bind(this, item._id)}\n                                    leftAvatar={<Avatar icon={<FontIcon\n                                        className={'fa fa-'+item.title.toLowerCase()} />} />}\n                                        rightIcon={(zxcvbn(item.password).score < 4 && item.type !== 2) && <FontIcon color={red400} style={{marginRight: 50, }} className='material-icons'>warning</FontIcon> }\n                                        rightIconButton={\n                                        <IconMenu  iconButtonElement={<IconButton onTouchTap={this.setActive.bind(this, item._id)} ><FontIcon className='material-icons' color={grey400}>more_vert</FontIcon></IconButton>} >\n                                            <MenuItem onTouchTap={this.copyPassword}>Copy Password</MenuItem>\n                                            <MenuItem onTouchTap={this.edit}>Edit</MenuItem>\n                                            <MenuItem onTouchTap={this.delete}>Delete</MenuItem>\n                                        </IconMenu>\n                                    }\n                                    primaryText={item.title}\n                                    secondaryText={item.user}\n                                />\n                            );\n                        })\n                        :\n                        this.props.database.map((item, index)=>{\n                            return (\n                                <ListItem\n                                    key={index}\n                                    onTouchTap={this.activePage.bind(this, item._id)}\n                                    leftAvatar={<Avatar icon={<FontIcon\n                                        className={'fa fa-'+item.title.toLowerCase()} />} />}\n                                        rightIcon={(zxcvbn(item.password).score < 4 && item.type !== 2) && <FontIcon color={red400} style={{marginRight: 50, }} className='material-icons'>warning</FontIcon> }\n                                        rightIconButton={\n                                        <IconMenu  iconButtonElement={<IconButton onTouchTap={this.setActive.bind(this, item._id)} ><FontIcon className='material-icons' color={grey400}>more_vert </FontIcon></IconButton>} >\n                                            <MenuItem onTouchTap={this.copyPassword}>Copy Password</MenuItem>\n                                            <MenuItem onTouchTap={this.edit}>Edit</MenuItem>\n                                            <MenuItem onTouchTap={this.delete}>Delete</MenuItem>\n                                        </IconMenu>\n                                    }\n                                    primaryText={item.title}\n                                    secondaryText={item.user}\n                                />\n                            );\n                        })\n                    }\n                </List>\n            );\n        } else {\n            if (this.props.searchState){\n                return <p style={{fontStyle: 'italic', color: 'gray', textAlign: 'center'}}>\n                    No matching entries could be found.</p>\n\n            } else {\n                return <p style={{fontStyle: 'italic', color: 'gray', textAlign: 'center'}}>\n                    You haven't made any entries! Click the red button to add one.</p>\n            }\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.content()}\n            </div>\n        );\n    }\n}\n","//Zxcvbn\nimport zxcvbn from 'zxcvbn';\n// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { evaluate } from '../../actions/databaseActions';\n// React components\nimport CircularProgress from 'material-ui/CircularProgress';\nimport Database from './database';\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n        securityScore: store.database.securityScore,\n    };\n})\n\n/**\n* Dashboard page of the application\n* The user is presented with a circular-progress-bar, which represents the current\n* state of the securityScore.\n* If there are entries that have issues (weak passwords), they are listed using\n* the List component.\n*/\n\nexport default class Dashboard extends React.Component {\n    //before the Dashboard is rendered, the database is re-evaluated\n    componentWillMount(){\n        this.props.dispatch(evaluate());\n    }\n\n    render(){\n        return (\n            <div>\n                <div style={{display: 'flex'}}>\n                    <div style={{flex: 1, width: '100%', height: 200, position: 'relative'}}>\n                        <CircularProgress\n                            mode=\"determinate\"\n                            value={this.props.securityScore.score}\n                            min={0}\n                            max={1}\n                            size={200}\n                            thickness={5}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                display: 'flex',\n                                justifyContent: 'center'\n                            }}\n                        />\n                        <div\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                fontSize: 20,\n                                fontStyle: 'italic',\n                                color: this.props.theme.palette.disabledColor,\n                            }}\n                            >\n                                <p>\n                                    {'Score: ' +(this.props.securityScore.score * 100).toFixed().toString() + '%'}\n                                </p>\n                            </div>\n                        </div>\n                        <div style={{flex: 1}}>\n                            <h1>Welcome!</h1>\n                            To the right you see your current security score. It\n                            tells you how safe your current passwords are. In order\n                            to improve your security score, check the list of\n                            issues below.\n                            <h4>Having trouble creating a new password?</h4>\n                            Let us do the thinking for you by generating a new\n                            password - thanks to your passwordmanager you won't have\n                            to remember your old one!\n                        </div>\n                </div>\n                {this.props.securityScore.count > 0 &&\n                    <div style={{borderTop: 'solid 1px gray', marginTop: 20, paddingTop: 20}}>\n                        <Database onlyShowBadLogins={true} />\n                    </div>\n                }\n            </div>\n\n        );\n    }\n}\n","import {\n    cyan500,\n    cyan700,\n    grey600,\n    pinkA100, pinkA200, pinkA400,\n    fullWhite,\n} from 'material-ui/styles/colors';\nimport {fade, darken} from 'material-ui/utils/colorManipulator';\nimport spacing from 'material-ui/styles/spacing';\n\nexport default {\n    spacing: spacing,\n    fontFamily: 'Roboto, sans-serif',\n    borderRadius: 2,\n    palette: {\n        primary1Color: cyan500,\n        primary2Color: cyan700,\n        primary3Color: grey600,\n        accent1Color: pinkA200,\n        accent2Color: pinkA400,\n        accent3Color: pinkA100,\n        textColor: fullWhite,\n        secondaryTextColor: fade(fullWhite, 0.7),\n        alternateTextColor: '#303030',\n        canvasColor: '#303030',\n        secondaryCanvasColor: darken('#303030', 0.1),\n        borderColor: fade(fullWhite, 0.3),\n        disabledColor: fade(fullWhite, 0.3),\n        pickerHeaderColor: fade(fullWhite, 0.12),\n        clockCircleColor: fade(fullWhite, 0.12),\n    },\n};\n","// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { setTheme } from '../../actions/stateActions';\n// React components\nimport lightTheme from '../../themes/lightTheme';\nimport darkTheme from '../../themes/darkTheme';\nimport Toggle from 'material-ui/Toggle';\n\n@connect((store) => {\n    return {\n        darkTheme: store.state.darkTheme,\n    };\n})\n\n/**\n* This component that handles the settings page.\n* At this point in time, only the theme can be changed, this may change in the\n* future. As there are no 'important' changes to be made, the settings are not\n* persistent. Also this may change in the future.\n*/\n\nexport default class Settings extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.setTheme = this.setTheme.bind(this);\n    }\n\n    //callback for dark-theme-toggle\n    setTheme(event, bool){\n        if(bool) this.props.dispatch(setTheme(darkTheme, bool));\n        else this.props.dispatch(setTheme(lightTheme, bool));\n    }\n\n    render(){\n        return (\n                <div>\n                    <Toggle\n                        label=\"Dark Theme\"\n                        toggled={this.props.darkTheme}\n                        onToggle={this.setTheme}\n                    />\n                </div>\n        );\n    }\n}\n","import zxcvbn from 'zxcvbn';\nimport {generatePassword} from '../../crypto';\nimport {clipboard} from 'electron';\n// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { editing, showSingleEntry, showDeleteDialog, capslock } from '../../actions/stateActions';\nimport { updateActiveEntry } from '../../actions/databaseActions';\n// React components\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport IconButton from 'material-ui/IconButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport Slider from 'material-ui/Slider';\nimport FontIcon from 'material-ui/FontIcon';\nimport CapsLock from 'material-ui/svg-icons/hardware/keyboard-capslock';\n\nimport { red500, deepOrange500, orange500, green500, lightGreen500 } from 'material-ui/styles/colors';\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n        editing: store.state.editing,\n        activeEntry: store.database.activeEntry,\n        capslock: store.state.capslock,\n    };\n})\n\n/**\n* This component handles the password section of the entry. It evaluates and gives\n* feedback to the password entered. The visibility of the password can be turned\n* on or off.\n* If the application is in editing mode, the user can change the password.\n* If the user enters a password, it is checked wheter or not capslock is activated and\n* how strong the entered password is. Additionaly, the user has the option to paste a\n* password from the clipboard and enter it automatically using a paste button. The\n* application also offers to generate a random password. If the user wants to,\n* he/she can define the exact number of letters, symbols etc. the generator should\n* output (some websites are picky..). If the editing mode is deactivated,\n* the user can copy the password to the clipboard.\n*/\n\nexport default class PasswordSection extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showPassword: false,\n            passwordEval: zxcvbn(this.props.activeEntry.password),\n            //default values for password generator\n            lowercaseLetters: 4,\n            uppercaseLetters: 4,\n            digits: 4,\n            special: 2,\n        }\n        this.changePassword = this.changePassword.bind(this);\n        this.showPassword = this.showPassword.bind(this);\n        this.showOptional = this.showOptional.bind(this);\n        this.capslock = this.capslock.bind(this);\n        this.copyPassword = this.copyPassword.bind(this);\n        this.pastePassword = this.pastePassword.bind(this);\n        this.genPassword = this.genPassword.bind(this);\n        this.handleFirstSlider = this.handleFirstSlider.bind(this);\n        this.handleSecondSlider = this.handleSecondSlider.bind(this);\n        this.handleThirdSlider = this.handleThirdSlider.bind(this);\n        this.handleFourthSlider = this.handleFourthSlider.bind(this);\n    }\n\n    componentWillMount(){\n        //set capslock callback\n        document.addEventListener( 'keydown', this.capslock);\n    }\n\n    //capslock callback\n    capslock(event){\n        this.props.dispatch(capslock(event.getModifierState('CapsLock')));\n    }\n\n    //callback if password is changed\n    changePassword(event, password){\n        this.setState({ passwordEval: zxcvbn(password)});\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                password: password,\n            }));\n        }\n    }\n\n    //callback for copy-password button\n    copyPassword(){\n        function wait(ms) { return new Promise(r => setTimeout(r,ms)); }\n\n        async function copy(password){\n            clipboard.writeText(password); //copy password to clipboard\n            await wait(10000); //start asynchrounous function, 10 second timeout\n            clipboard.writeText(''); //clear clipboard\n        }\n\n        copy(this.props.activeEntry.password);\n    }\n\n    //callback for paste-password button\n    pastePassword(){\n        this.changePassword({}, clipboard.readText());\n    }\n\n    //callback for generate-password button\n    genPassword(){\n        //generate password using the parameters set by user (if unchanged, default values)\n        this.changePassword({}, generatePassword(\n            this.state.lowercaseLetters,\n            this.state.uppercaseLetters,\n            this.state.digits,\n            this.state.special,\n        ));\n    }\n\n    //callback for password-visibility toggle\n    showPassword(event, showPassword){ this.setState({showPassword}); }\n\n    //callback for optional settings toggle\n    showOptional(){ this.setState({optional: !this.state.optional })}\n\n    //handlers for sliders\n    handleFirstSlider(event, value){ this.setState({lowercaseLetters: value}); }\n    handleSecondSlider(event, value){ this.setState({uppercaseLetters: value}); }\n    handleThirdSlider(event, value){ this.setState({digits: value}); }\n    handleFourthSlider(event, value){ this.setState({special: value}); }\n\n    render(){\n        const faces = ['sentiment_very_dissatisfied', 'sentiment_dissatisfied',\n            'sentiment_neutral', 'sentiment_satisfied', 'sentiment_very_satisfied'];\n        const colors = [red500, deepOrange500, orange500, green500, lightGreen500];\n        const strength = ['very weak', 'weak', 'not bad', 'good', 'very good'];\n\n        return (\n        <div>\n            <div style={{display: 'flex'}}>\n                <div style={{flex: 1, marginRight: 7,}}>\n                    <TextField\n                        value={this.props.activeEntry.password}\n                        onChange={this.changePassword}\n                        floatingLabelText='Password'\n                        underlineShow={this.props.editing}\n                        type={this.state.showPassword ? 'text' : 'password' }\n                        fullWidth={true}\n                    />\n                    {this.props.capslock && <CapsLock color={this.props.theme.palette.primary1Color} style={{marginLeft: -30, alignSelf: 'center'}} />}\n                </div>\n                <div style={{display: 'flex', justifyContent: 'flex-right'}}>\n                    <Checkbox\n                        style={{width: 30, alignSelf: 'center'}}\n                        onCheck={this.showPassword}\n                        checkedIcon={<FontIcon className='material-icons'>visibility</FontIcon>}\n                        uncheckedIcon={<FontIcon className='material-icons'>visibility_off</FontIcon>}\n                    />\n                    {this.props.editing ?\n                    <IconButton onTouchTap={this.pastePassword} style={{alignSelf: 'center'}} >{<FontIcon className=\"material-icons\">content_paste</FontIcon>}</IconButton>\n                    : <IconButton onTouchTap={this.copyPassword} style={{alignSelf: 'center'}} >{<FontIcon className=\"material-icons\">content_copy</FontIcon>}</IconButton>}\n                    {this.props.editing &&\n                        <IconButton tooltip=\"Generate Password\" onTouchTap={this.genPassword} style={{alignSelf: 'center'}} >\n                            {<FontIcon className=\"material-icons\">refresh</FontIcon>}\n                        </IconButton>\n                    }\n                    {this.props.editing &&\n                        <Checkbox\n                            style={{alignSelf: 'center', marginLeft: 10}}\n                            onCheck={this.showOptional}\n                            checkedIcon={<FontIcon className=\"material-icons\">keyboard_arrow_up</FontIcon>}\n                            uncheckedIcon={<FontIcon className=\"material-icons\">keyboard_arrow_down</FontIcon>}\n                        />\n                    }\n                </div>\n            </div>\n            {/* sliders */}\n            {this.state.optional &&\n                <div style={{display: 'flex', margin: '0 -7px', marginTop: 15}}>\n                    <div style={{flex: 1, margin: '0 7px'}}>\n                        <div>\n                            <span style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>Digits: {this.state.digits}</span>\n                            <Slider min={0} max={10} step={1} defaultValue={4} style={{height: 30}}\n                                value={this.state.digits} onChange={this.handleThirdSlider} />\n                        </div>\n                        <div>\n                            <span style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>Special letters: {this.state.special}</span>\n                            <Slider min={0} max={10} step={1} defaultValue={4} style={{height: 30}}\n                                value={this.state.special} onChange={this.handleFourthSlider} />\n                        </div>\n                    </div>\n                    <div style={{flex: 1, margin: '0 7px'}}>\n                        <div>\n                            <span style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>Lowercase letters: {this.state.lowercaseLetters}</span>\n                            <Slider min={0} max={10} step={1} defaultValue={4}  style={{height: 30}}\n                                value={this.state.lowercaseLetters} onChange={this.handleFirstSlider} />\n                        </div>\n                        <div>\n                            <span style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>Uppercase letters: {this.state.uppercaseLetters}</span>\n                            <Slider min={0} max={10} step={1} defaultValue={4} style={{height: 30}}\n                                value={this.state.uppercaseLetters} onChange={this.handleSecondSlider}/>\n                        </div>\n                    </div>\n                </div>\n            }\n            {/* feedback */}\n            <div style={{display: 'flex', margin: '0 -7px'  }}>\n                <div style={{flex: 1, margin: '0 7px'}}>\n                    <div>\n                        <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                            Feedback:\n                        </p>\n                        <p> {this.state.passwordEval.feedback.warning || 'none'} </p>\n                    </div>\n                    <div>\n                        <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                            Suggestions:\n                        </p>\n                        <p> {this.state.passwordEval.feedback.suggestions == '' ? 'none'\n                                : this.state.passwordEval.feedback.suggestions } </p>\n                    </div>\n                </div>\n                <div style={{flex: 1, margin: '0 7px'}}>\n                    <div>\n                        <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                            Crack Time:\n                        </p>\n                        <p> {this.state.passwordEval.crack_times_display.offline_slow_hashing_1e4_per_second} </p>\n                    </div>\n                    <div>\n                        <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                            Strength:\n                        </p>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <span style={{color: colors[this.state.passwordEval.score]}}> {strength[this.state.passwordEval.score]}</span>\n                            <FontIcon style={{marginLeft: 10}} color={colors[this.state.passwordEval.score]} className='material-icons'>{faces[this.state.passwordEval.score]}</FontIcon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n","// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { editing, showSingleEntry } from '../../actions/stateActions';\nimport { updateActiveEntry } from '../../actions/databaseActions';\n// React components\nimport MenuItem from 'material-ui/MenuItem'\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport DatePicker from 'material-ui/DatePicker';\nimport PasswordSection from './passwordSection';\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n        editing: store.state.editing,\n        activeEntry: store.database.activeEntry,\n    };\n})\n\n/**\n* This component handles the representation of the activeEntry. With other words,\n* it handles both the representation of existing database entries (when triggered\n* by the list-component) and a new ones (when triggered by AddDialog-component).\n*/\n\nexport default class Entry extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.changeUrl = this.changeUrl.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n        this.content = this.content.bind(this);\n        this.changeTitle = this.changeTitle.bind(this);\n        this.changeType = this.changeType.bind(this);\n        this.changeNumber = this.changeNumber.bind(this);\n        this.changeCCV = this.changeCCV.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.changeOutgoingMailServer = this.changeOutgoingMailServer.bind(this);\n        this.changeIncomingMailServer = this.changeIncomingMailServer.bind(this);\n        this.changeServer = this.changeServer.bind(this);\n    }\n\n    //callback for title-textfield\n    changeTitle(event, title){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                title: title,\n            }));\n        }\n    }\n\n    //callback for type-selectfield\n    changeType(event, type){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                type: type,\n            }));\n        }\n    }\n\n    //callback for url-textfield\n    changeUrl(event, url){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                url: url,\n            }));\n        }\n    }\n\n    //callback for user-textfield\n    changeUser(event, user){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                user: user,\n            }));\n        }\n    }\n\n    //callback for number-textfield\n    changeNumber(event, number){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                number: number,\n            }));\n        }\n    }\n\n    //callback for ccv-textfield\n    changeCCV(event, ccv){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                ccv: ccv,\n            }));\n        }\n    }\n    //callback for date-component\n    changeDate(event, date){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                date: date,\n            }));\n        }\n    }\n\n    //callback for title-textfield\n    changeOutgoingMailServer(event, oms){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                outgoingMailServer: oms,\n            }));\n        }\n    }\n\n    //callback for incomingMailServer-textfield\n    changeIncomingMailServer(event, ims){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                incomingMailServer: ims,\n            }));\n        }\n    }\n\n    //callback for server-selectfield\n    changeServer(event, server){\n        if(this.props.editing){\n            this.props.dispatch(updateActiveEntry({\n                ...this.props.activeEntry,\n                server: server,\n            }));\n        }\n    }\n\n    /**\n    * Function handling the layout of the entry depending on the activeEntry type\n    * @returns entry-layout\n    */\n\n    content(){\n        switch(this.props.activeEntry.type){\n            case 1 :\n                return (\n                <div>\n                    <div style={{display: 'flex',  margin: '0 -7px'}}>\n                        <div style={{flex: 1, margin: '0 7px'}}>\n                            <TextField\n                                value={this.props.activeEntry.incomingMailServer}\n                                onChange={this.changeIncomingMailServer}\n                                floatingLabelText='Incoming Mail Server'\n                                fullWidth={true}\n                                underlineShow={this.props.editing}\n                            /><br />\n                            <TextField\n                                value={this.props.activeEntry.user}\n                                onChange={this.changeUser}\n                                floatingLabelText='Username'\n                                fullWidth={true}\n                                underlineShow={this.props.editing}\n                            />\n                        </div>\n                        <div style={{flex: 1, margin: '0 7px'}}>\n                            <TextField\n                                value={this.props.activeEntry.outgoingMailServer}\n                                onChange={this.changeOutgoingMailServer}\n                                floatingLabelText='Outgoing Mail Server'\n                                fullWidth={true}\n                                underlineShow={this.props.editing}\n                            /><br />\n                            <SelectField\n                                fullWidth={true}\n                                onChange={this.changeServer}\n                                value={this.props.activeEntry.server}\n                                disabled={!this.props.editing} \n                                floatingLabelText=\"Server Type\" >\n                                <MenuItem value={0} primaryText=\"POP\" />\n                                <MenuItem value={1} primaryText=\"IMAP\" />\n                            </SelectField>\n                        </div>\n\n                    </div>\n                    <PasswordSection />\n                </div>\n                );\n\n            case 2 :\n                return (\n                <div >\n                    <TextField\n                        value={this.props.activeEntry.number}\n                        onChange={this.changeNumber}\n                        floatingLabelText='Card Number'\n                        fullWidth={true}\n                        underlineShow={this.props.editing}\n                    /><br />\n                    <DatePicker\n                        value={this.props.activeEntry.date}\n                        onChange={this.changeDate}\n                        floatingLabelText=\"Expiration Date\"\n                        autoOk={true}\n                        disabled={!this.props.editing}\n                    /><br />\n                    <TextField\n                        value={this.props.activeEntry.ccv}\n                        onChange={this.changeCCV}\n                        floatingLabelText='CCV'\n                        fullWidth={true}\n                        underlineShow={this.props.editing}\n                    /><br />\n                </div>\n                );\n\n            default :\n                return (\n                <div>\n                    <TextField\n                        value={this.props.activeEntry.user}\n                        onChange={this.changeUser}\n                        floatingLabelText='Username'\n                        fullWidth={true}\n                        underlineShow={this.props.editing}\n                    /><br />\n                    <TextField\n                        value={this.props.activeEntry.url}\n                        onChange={this.changeUrl}\n                        floatingLabelText='Url'\n                        fullWidth={true}\n                        underlineShow={this.props.editing}\n                    /><br />\n                    <PasswordSection />\n                </div>\n            );\n        }\n    }\n\n    render(){\n        return (\n            <div style={{overflow: 'hidden'}}>\n                {this.props.editing &&\n                    <div style={{display: 'flex',margin: '0 -7px',}}>\n                        <SelectField style={{flex: 1, margin: '0 7px'}} value={this.props.activeEntry.type} floatingLabelText=\"Login Type\" onChange={this.changeType}>\n                            <MenuItem value={0} primaryText=\"Login\" />\n                            <MenuItem value={1} primaryText=\"Email\" />\n                            <MenuItem value={2} primaryText=\"Credit Card\" />\n                        </SelectField>\n                        <TextField\n                            style={{flex: 1, margin: '0 7px'}}\n                            value={this.props.activeEntry.title}\n                            onChange={this.changeTitle}\n                            floatingLabelText='Title'\n                            fullWidth={true}\n                            underlineShow={this.props.editing}\n                        />\n                    </div>\n                }\n                {this.content()}\n            </div>\n        );\n    }\n}\n","// React\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n/**\n*  Component handling the about me page.\n*/\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n    };\n})\n\nexport default class About extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <div style={{fontSize: 20, letterSpacing: 4, textAlign: 'center'}}>\n                    <i className=\"fa fa-code\"></i><span style={{letterSpacing: 1}}> with </span>\n                    <i className=\"fa fa-heart\"></i><span style={{letterSpacing: 1}}> by </span>\n                    <a className=\"js-external-link\" style={{color: this.props.theme.palette.textColor}} href=\"https://github.com/IvoKoller\">\n                        <i className=\"fa fa-hand-pointer-o\"></i>\n                        <i className=\"fa fa-hand-peace-o\"></i>\n                        <i className=\"fa fa-hand-rock-o\"></i>\n                    </a>\n                </div>\n            </div>\n            );\n        }\n    }\n","import { setMasterPassword, verifyPassword } from '../../crypto';\n// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/stateActions';\nimport { load } from '../../actions/databaseActions';\n// React components\nimport TextField from 'material-ui/TextField';\nimport FontIcon from 'material-ui/FontIcon';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Paper from 'material-ui/Paper';\nimport { red500, } from 'material-ui/styles/colors';\nimport { ShakeHorizontal } from 'reshake'; //handles shake-animation\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n        hashedMasterPassword: store.state.hashedMasterPassword,\n    }\n})\n\n/**\n* This is the login that is shown once the program is setup and a master password\n* has been defined. It simply consists of a textfield and a submit button.\n* Once the user clicks on the submit button, the value of the textfield is hashed and\n* compared to the hashed Master Password. If they are the same, the login state\n* changes to true, the database gets decrypted using the user-submitted master\n* password and the user can access the database.\n* If they are different, the lock-icon turns red and shakes horizontally in order\n* to indicate that the login has failed.\n*/\n\nexport default class Login extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            masterPassword: '',\n            shaking: false,\n        }\n        this.changePassword = this.changePassword.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    //callback for master password textfield\n    changePassword(event, masterPassword){\n        this.setState({masterPassword});\n        this.setState({shaking: false});\n    }\n\n    //callback for submit button\n    submit(){\n        var that = this;\n        verifyPassword(this.state.masterPassword, this.props.hashedMasterPassword, (err, verified)=>{\n            if(verified){\n                console.log('correct password')\n                setMasterPassword(this.state.masterPassword);\n                this.props.dispatch(load());\n            } else {\n                console.log('false')\n                this.setState({shaking: true});\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div style={{\n                flex: 1,\n                display: 'flex',\n                height: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',\n                background: this.props.theme.palette.primary1Color,\n            }}>\n                <Paper style={{\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    display: 'flex',\n                    height: 'auto',\n                    width: 500,\n                    padding: 20,\n                }}>\n                    <ShakeHorizontal style={{marginTop: 10}} trigger={!this.state.shaking && 'someString'} q={1} fixed={false} freez={false} >\n                        <FontIcon style={this.state.shaking && {color: red500}} className='material-icons'>lock_outline</FontIcon>\n                    </ShakeHorizontal>\n                    <TextField\n                        style={{marginLeft: 20, marginRight: 20}}\n                        name='login'\n                        fullWidth={true}\n                        type='password'\n                        floatingLabelText=\"Master Password\"\n                        value={this.state.masterPassword}\n                        onChange={this.changePassword}\n                    />\n                    <RaisedButton\n                        label=\"Login\"\n                        primary={true}\n                        onTouchTap={this.submit}\n                    />\n                </Paper>\n            </div>\n        );\n    }\n}\n","//Electron\nimport { remote } from 'electron';\nimport jetpack from 'fs-jetpack';\n//Crypto\nimport { hashPassword } from '../../crypto';\nimport zxcvbn from 'zxcvbn';\n// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { setHashedMasterPassword } from '../../actions/stateActions';\n// React components\nimport TextField from 'material-ui/TextField';\nimport FontIcon from 'material-ui/FontIcon';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Paper from 'material-ui/Paper';\nimport AppBar from 'material-ui/AppBar';\n// - Colors\nimport { blueGrey900, red500, deepOrange500, orange500, green500, lightGreen500,\n         amber400, amber600, blue300, blue600, red400, red600 } from 'material-ui/styles/colors'\n// - Carousel component\nimport { AutoRotatingCarousel, Slide } from 'material-auto-rotating-carousel';\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n        masterPassword: store.state.masterPassword,\n    }\n})\n\n/**\n* Should the application start for the first time/ the 'config.json' file be deleted,\n* the application starts in a setup mode. The setup component shows a carousel,\n* showing off some of the features teh passwordmanager has to offer. If the user\n* clicks on the 'get started' button, they are taken to the setup screen, where\n* they have to define a new master password. If the defined master password\n* is secure enough (scores 4 in the Zxcvbn test) and has been entered two identical\n*  times by the user, the password gets hashed and written into the 'config.json' file.\n*/\n\nexport default class Setup extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstPassword: '',\n            secondPassword: '',\n            passwordEval: zxcvbn(''),\n            equal: true,\n            start: false,\n        }\n        this.changeFirstPassword = this.changeFirstPassword.bind(this);\n        this.changeSecondPassword = this.changeSecondPassword.bind(this);\n        this.submit = this.submit.bind(this);\n        this.onStart = this.onStart.bind(this);\n    }\n\n    //callback for first textfield\n    changeFirstPassword(event, password){\n        this.setState({\n            firstPassword: password,\n            passwordEval: zxcvbn(password),\n            equal: this.state.secondPassword == password ? true : false,\n        });\n    }\n\n    //callback for second textfield\n    changeSecondPassword(event, password){\n        this.setState({\n            secondPassword: password,\n            equal: this.state.firstPassword == password ? true : false,\n        });\n    }\n\n    //on submit,\n    submit(){\n        const app = remote.app;\n        const appDir = jetpack.cwd(app.getAppPath());\n        //hash password,\n        hashPassword(this.state.firstPassword, (err, masterPassword)=>{\n            //write to 'config.json'\n            appDir.write('app/config.json', { masterPassword })\n            //set in redux store\n            this.props.dispatch(setHashedMasterPassword(masterPassword));\n        });\n\n    }\n\n    //callback for 'get started' button, start setup process\n    onStart(){\n        this.setState({start: true});\n    }\n\n    render() {\n        const faces = ['sentiment_very_dissatisfied', 'sentiment_dissatisfied',\n            'sentiment_neutral', 'sentiment_satisfied', 'sentiment_very_satisfied'];\n        const colors = [red500, deepOrange500, orange500, green500, lightGreen500];\n        const strength = ['very weak', 'weak', 'not bad', 'good', 'very good'];\n\n        const carousel = (<div>\n              <AutoRotatingCarousel\n                label=\"Get started\"\n                open\n                interval={5000}\n                landscape={true}\n                mobile={true}\n                onStart={this.onStart}\n              >\n                <Slide\n                  media={<img src=\"img/forget.svg\" />}\n                  mediaStyle={{width: '50%', margin: '0 auto'}}\n                  mediaBackgroundStyle={{ backgroundColor: red400 }}\n                  contentStyle={{ backgroundColor: red600 }}\n                  title=\"Sick of forgetting your passwords?\"\n                  subtitle=\"From now on you just have to remember one.\"\n                />\n                <Slide\n                  media={<img src=\"img/generate.svg\" />}\n                  mediaStyle={{width: '50%', margin: '0 auto'}}\n                  mediaBackgroundStyle={{ backgroundColor: amber400 }}\n                  contentStyle={{ backgroundColor: amber600 }}\n                  title=\"Auto-generated Passwords\"\n                  subtitle=\"Why come up with new passwords? Let your computer do the work for you!\"\n                />\n                <Slide\n                  media={<img src=\"img/secure.svg\" />}\n                  mediaStyle={{width: '50%', margin: '0 auto'}}\n                  mediaBackgroundStyle={{ backgroundColor: blue300 }}\n                  contentStyle={{ backgroundColor: blue600 }}\n                  title=\"Military-grade Encryption\"\n                  subtitle=\"All passwords are encrypted using AES-256.\"\n                />\n              </AutoRotatingCarousel>\n            </div>)\n\n        const start = (<div style={{\n                flex: 1,\n                display: 'flex',\n                height: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                background: blueGrey900,\n            }}>\n                <div style={{\n                    height: '100%',\n                    flex: 1,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}>\n                    <img style={{width: '50%'}} src='img/start.svg'></img>\n                </div>\n                <div style={{\n                    flex: 1,\n                    overflowY: 'scroll',\n                }}>\n                        <AppBar style={{position: 'fixed'}} showMenuIconButton={false} title='Create Master Password' />\n                    <Paper style={{\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        display: 'flex',\n                        height: '100%',\n                        padding: 20,\n                        paddingTop: 90,\n                    }}>\n                        <span>Please choose your Master Password - the last one\n                            that you'll have to remember. We reccomend creating a password\n                            by chaining together a bunch of uncommon words. No need for\n                            symbols, digits, numbers or uppercase letters.\n                        </span>\n                        <TextField\n                            style={{marginLeft: 20, marginRight: 20}}\n                            name='login'\n                            fullWidth={true}\n                            type='password'\n                            floatingLabelText=\"Master Password\"\n                            value={this.state.firstPassword}\n                            onChange={this.changeFirstPassword}\n                        />\n                        <TextField\n                            style={{marginLeft: 20, marginRight: 20}}\n                            name='firstPassword'\n                            fullWidth={true}\n                            type='password'\n                            errorText={!this.state.equal ? 'Passwords are not equal' : ''}\n                            floatingLabelText=\"Repeat Password\"\n                            value={this.state.secondPassword}\n                            onChange={this.changeSecondPassword}\n                        />\n                        <div style={{display: 'flex', width: '100%', margin: '0 -7px', marginTop: 10}}>\n                            <div style={{flex: 1, margin: '0 7px'}}>\n                                <div>\n                                    <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                                        Feedback:\n                                    </p>\n                                    <p> {this.state.passwordEval.feedback.warning || 'none'} </p>\n                                </div>\n                                <div>\n                                    <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                                        Suggestions:\n                                    </p>\n                                    <p> {this.state.passwordEval.feedback.suggestions == '' ? 'none'\n                                            : this.state.passwordEval.feedback.suggestions } </p>\n                                </div>\n                            </div>\n                            <div style={{flex: 1, margin: '0 7px'}}>\n                                <div>\n                                    <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                                        Crack Time:\n                                    </p>\n                                    <p> {this.state.passwordEval.crack_times_display.offline_slow_hashing_1e4_per_second} </p>\n                                </div>\n                                <div>\n                                    <p style={{fontSize: 13, color: this.props.theme.palette.disabledColor}}>\n                                        Strength:\n                                    </p>\n                                    <div style={{display: 'flex', alignItems: 'center'}}>\n                                        <span style={{color: colors[this.state.passwordEval.score]}}> {strength[this.state.passwordEval.score]}</span>\n                                        <FontIcon style={{marginLeft: 10}} color={colors[this.state.passwordEval.score]} className='material-icons'>{faces[this.state.passwordEval.score]}</FontIcon>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <span style={{margin: 10, marginBottom: 20}}>\n                            <strong>Attention:</strong> You <strong>must</strong> remember you password.\n                            If you forget your Master Password, it <strong>cannot</strong> be reset.\n                            Without it, your data is <strong>impossible</strong> to retrieve.\n                        </span>\n                        {\n                            (this.state.equal && this.state.passwordEval.score == 4) ?\n                                <RaisedButton\n                                    label=\"Login\"\n                                    primary={true}\n                                    onTouchTap={this.submit}\n                                />\n                            :\n                                <RaisedButton\n                                    label=\"Login\"\n                                    primary={true}\n                                    disabled={true}\n                                    onTouchTap={this.submit}\n                                />\n                        }\n                    </Paper>\n                </div>\n            </div>)\n        return (this.state.start ? start : carousel);\n    }\n}\n","//React\nimport React from 'react';\n//Redux\nimport { connect } from 'react-redux';\nimport {showDeleteDialog, showNewDialog, showSingleEntry, editing } from '../actions/stateActions';\nimport {fetch, remove, evaluate, insert, updateActiveEntry} from '../actions/databaseActions';\n//React components\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport TextField from 'material-ui/TextField';\nimport Entry from './pages/entry'\n\n/**\n* Add-dialog with action buttons. The actions are passed in as an array of React objects\n* It should prevent the user from accidently deleting an entry.\n* You can also close this dialog by clicking outside the dialog, or with the 'Esc' key.\n*/\n\n@connect((store) => {\n    return {\n        showDeleteDialog: store.state.showDeleteDialog,\n        activeEntry: store.database.activeEntry,\n        activePage: store.state.activePage,\n    };\n})\n\nexport class DeleteDialog extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.cancel = this.cancel.bind(this);\n        this.delete = this.delete.bind(this);\n    }\n\n    //callback for cancel button/ 'Esc' key press/ click outside dialog\n    cancel() {\n        this.props.dispatch(showDeleteDialog(false));\n    }\n\n    //callback for delete button\n    delete() {\n        this.props.dispatch(remove(this.props.activeEntry._id));\n        this.props.dispatch(fetch({type: this.props.activePage.index-1}));\n        //re-evaluate database, in order to update securityScore\n        this.props.dispatch(evaluate());\n        this.props.dispatch(showDeleteDialog(false));\n        this.props.dispatch(showSingleEntry(false));\n        this.props.dispatch(editing(false));\n    }\n\n    render() {\n        const actions = [\n            <FlatButton\n                label=\"Cancel\"\n                primary={true}\n                onTouchTap={this.cancel}\n            />,\n            <FlatButton\n                label=\"Delete\"\n                primary={true}\n                onTouchTap={this.delete}\n            />,\n        ];\n\n        return (\n            <Dialog\n                title={\"Do you want to delete this entry?\"}\n                actions={actions}\n                modal={false}\n                open={this.props.showDeleteDialog}\n                onRequestClose={this.cancel}\n            ></Dialog>\n        );\n    }\n}\n\n/**\n* Add-dialog with action buttons. The actions are passed in as an array of React objects\n* You can also close this dialog by clicking outside the dialog, or with the 'Esc' key.\n*/\n\n@connect((store) => {\n    return {\n        showNewDialog: store.state.showNewDialog,\n        activeEntry: store.database.activeEntry,\n        activePage: store.state.activePage,\n    };\n})\n\nexport class AddDialog extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.cancel = this.cancel.bind(this);\n        this.add = this.add.bind(this);\n    }\n\n    //callback for cancel button/ 'Esc' key press/ click outside dialog\n    cancel() {\n        this.props.dispatch(showNewDialog(false));\n        this.props.dispatch(editing(false));\n        this.props.dispatch(fetch({type: this.props.activePage.index-1}));\n    }\n\n    //callback for add button\n    add() {\n        this.props.dispatch(insert(this.props.activeEntry));\n        this.props.dispatch(showNewDialog(false));\n        this.props.dispatch(editing(false));\n        this.props.dispatch(fetch({type: this.props.activePage.index-1}));\n        //re-evaluate database, in order to update securityScore\n        this.props.dispatch(evaluate());\n    }\n\n    render() {\n        const actions = [\n            <FlatButton\n                label=\"Cancel\"\n                primary={true}\n                onTouchTap={this.cancel}\n            />,\n            <FlatButton\n                label=\"Add\"\n                primary={true}\n                onTouchTap={this.add}\n            />,\n        ];\n\n        return (\n            <Dialog\n                title='Add new entry'\n                actions={actions}\n                modal={false}\n                open={this.props.showNewDialog}\n                onRequestClose={this.cancel}\n                autoScrollBodyContent={true}\n            >\n                <Entry />\n            </Dialog>\n        );\n    }\n}\n","// Electron\nconst { BrowserWindow } = require('electron').remote;\nimport { remote } from 'electron';\nimport jetpack from 'fs-jetpack';\n// React\nimport React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport { fetch, update, updateActiveEntry, evaluate } from '../actions/databaseActions';\nimport {\n        setActivePage,\n        setSearchQuery,\n        setSearchState,\n        showSingleEntry,\n        editing,\n        showDeleteDialog,\n        setHashedMasterPassword,\n        showNewDialog } from '../actions/stateActions';\n\n// React components\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport Paper from 'material-ui/Paper';\nimport AppBar from 'material-ui/AppBar';\nimport Menu from 'material-ui/Menu'\nimport MenuItem from 'material-ui/MenuItem';\nimport Badge from 'material-ui/Badge';\nimport TextField from 'material-ui/TextField'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport FlatButton from 'material-ui/FlatButton';\nimport IconButton from 'material-ui/IconButton';\n// - Svg Icons\nimport FontIcon from 'material-ui/FontIcon'\nimport CloseIcon from 'material-ui/svg-icons/navigation/close';\nimport RemoveIcon from 'material-ui/svg-icons/content/remove';\nimport AddIcon from 'material-ui/svg-icons/content/add';\n// - Pages\nimport Dashboard from './pages/dashboard';\nimport Settings from './pages/settings';\nimport Database from './pages/database';\nimport Entry from './pages/entry';\nimport About from './pages/about';\nimport Login from './pages/login';\nimport Setup from './pages/setup';\n// - Dialogs\nimport { DeleteDialog, AddDialog } from './dialogs';\n\n@connect((store) => {\n    return {\n        theme: store.state.theme,\n        activePage: store.state.activePage,\n        activeEntry: store.database.activeEntry,\n        newActiveEntry: store.state.newActiveEntry,\n        showSingleEntry: store.state.showSingleEntry,\n        searchQuery: store.state.searchQuery,\n        searchState: store.state.searchState,\n        securityScore: store.database.securityScore,\n        editing: store.state.editing,\n        badLogins: store.state.badLogins,\n        loaded: store.database.loaded,\n        hashedMasterPassword: store.state.hashedMasterPassword,\n    };\n})\n\n\n/**\n* This is the central component that handles the different application states.\n* Once the application starts, it checks wheter or not a config file exists.\n* If there doesn't exist one, the application starts the setup page.\n* Once a master password has been defined by the user, the layout then switches to\n* the login page where the user is asked to (re-)enter their password. If this\n* happens successfully, the layout then switches to the standard application layout\n* featuring a side- and app-bar with a search field. The user is now able to navigate\n* between the different pages, creating, editing and deleting database entries.\n*/\n\nexport default class Layout extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.activePage = this.activePage.bind(this);\n        this.back = this.back.bind(this);\n        this.add = this.add.bind(this);\n        this.edit = this.edit.bind(this);\n        this.delete = this.delete.bind(this);\n        this.save = this.save.bind(this);\n        this.changeSearch = this.changeSearch.bind(this);\n        this.resetSearchQuery = this.resetSearchQuery.bind(this);\n        this.content = this.content.bind(this);\n    }\n\n    //check on application start if config-file exists\n    componentWillMount(){\n        const app = remote.app;\n        const appDir = jetpack.cwd(app.getAppPath());\n        const config = appDir.read('app/config.json', 'json');\n        if(config !== undefined){ //check if file exists, if it does, set hashed Master Password\n            this.props.dispatch(setHashedMasterPassword(new Buffer(config.masterPassword)));\n        }\n    }\n\n    //function that sets the active page\n    activePage(event,item,index){\n        if(index > 0)\n            this.props.dispatch(fetch({type: index-1}));\n        this.props.dispatch(setActivePage(index, item.props.primaryText));\n        this.props.dispatch(showSingleEntry(false));\n        this.props.dispatch(setSearchState(false));\n    }\n\n    //callback for floating action button.\n    add(){\n        this.props.dispatch(showSingleEntry(false));\n        this.props.dispatch(setSearchState(false));\n        //reset active entry\n        this.props.dispatch(updateActiveEntry({\n            url: '',\n            user: '',\n            password: '',\n            title: '',\n            type: 0,\n            server: null,\n        }));\n        //show add dialog\n        this.props.dispatch(showNewDialog(true));\n        this.props.dispatch(editing(true));\n    }\n\n    //callback for back-arrow button\n    back(){\n        this.props.dispatch(fetch({type: this.props.activePage.index-1}))\n        this.props.dispatch(showSingleEntry(false));\n        this.props.dispatch(editing(false));\n    }\n\n    //callback for search function\n    changeSearch(event, query){\n        if(this.props.searchState){\n            this.props.dispatch(setSearchQuery(query));\n            this.props.dispatch(fetch({type: this.props.activePage.index-1, title: new RegExp(query,'i')})); //i flag so it is case-insensetive\n        }\n    }\n\n    //callback for close button\n    close(){\n        BrowserWindow.getFocusedWindow().close();\n    }\n\n    //callback if menu item is clicked\n    page(){\n        if(this.props.showSingleEntry) return <Entry />\n        else {\n            //depending on active page index, certain components are shown\n            switch(this.props.activePage.index){\n                case 0: return <Dashboard />\n                case 1: return <Database />\n                case 2: return <Database />\n                case 3: return <Database />\n                case 4: return <Settings />\n                case 5: return <About />\n            }\n        }\n    }\n\n    //callback for delete button in app bar\n    delete(){\n        this.props.dispatch(showDeleteDialog(true));\n    }\n\n    //callback for edit button in app bar\n    edit(){\n        this.props.dispatch(editing(true));\n        this.props.dispatch(showSingleEntry(true));\n    }\n\n    //callback for save button in app bar\n    save(){\n        let {_id, ...entry} = this.props.activeEntry;\n        this.props.dispatch(update(_id, entry));\n        this.props.dispatch(editing(false));\n        this.props.dispatch(evaluate());\n    }\n\n    //callback for search button\n    search(search){\n        this.props.dispatch(setSearchState(search));\n        if(!search)\n            this.props.dispatch(fetch({type: this.props.activePage.index-1}));\n    }\n\n    //callback for maximize button\n    maximize(){\n        //if window is maximized, unmaximize, if not maximize\n        if(BrowserWindow.getFocusedWindow().isMaximized())\n            BrowserWindow.getFocusedWindow().unmaximize();\n        else BrowserWindow.getFocusedWindow().maximize();\n    }\n\n    //callback for minimize button\n    minimize(){\n        BrowserWindow.getFocusedWindow().minimize();\n    }\n\n    //layout of the buttons on the right hand side of the app bar\n    rightIcon(){\n        if(this.props.showSingleEntry){\n            if(!this.props.editing) return <IconButton onTouchTap={this.edit}><FontIcon className='material-icons'>edit</FontIcon></IconButton>\n            else return (\n                    <div>\n                        <IconButton onTouchTap={this.delete}><FontIcon color={this.props.theme.palette.alternateTextColor} className='material-icons'>delete</FontIcon></IconButton>\n                        <IconButton onTouchTap={this.save}><FontIcon color={this.props.theme.palette.alternateTextColor} className='material-icons'>save</FontIcon></IconButton>\n                    </div>\n                );\n        } else {\n            if( 0 < this.props.activePage.index && this.props.activePage.index < 4){\n                return (\n                    <IconButton onTouchTap={this.search.bind(this, true)}><FontIcon className='material-icons'>search</FontIcon></IconButton>\n                );\n            }\n        }\n    }\n\n    //callback for the reset button of the search bar\n    resetSearchQuery(){\n        this.props.dispatch(setSearchQuery(''));\n        this.props.dispatch(fetch({type: this.props.activePage.index-1}));\n    }\n\n\n    content(){\n        if(!this.props.loaded){ //check if database is loaded (user is logged in)\n            if(this.props.hashedMasterPassword == null) return <Setup /> //if config file couldn't be found, start setup process\n            else return <Login /> //if hashedMasterPassword present, show login\n        } else{ //if logged in, show layout\n            return(\n                <Paper style={{flex: 1, display: 'flex', height: '100%',flexDirection: 'row'}} rounded={false}>\n                    <Paper rounded={false} style={{zIndex: 1}}>\n                        <div style={{height: 150, display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                            <FontIcon className='material-icons' style={{color: this.props.theme.palette.alternateTextColor, borderRadius: 50,  background: this.props.theme.palette.primary1Color,  padding: 10, fontSize: 70, }}>lock</FontIcon>\n                        </div>\n                        <Menu disableAutoFocus={true} onItemTouchTap={this.activePage} >\n                            <MenuItem primaryText='Dashboard' leftIcon={<FontIcon className='material-icons'>dashboard</FontIcon>} rightIcon={\n                                (this.props.securityScore.count > 0) && <Badge badgeContent={this.props.securityScore.count} secondary={true} /> //display number of issues in badge\n                            } />\n                            <MenuItem primaryText='Logins' leftIcon={<FontIcon className='material-icons'>lock_outline</FontIcon>} />\n                            <MenuItem primaryText='Email Accounts' leftIcon={<FontIcon className='material-icons'>mail_outline</FontIcon>} />\n                            <MenuItem primaryText='Credit Cards' leftIcon={<FontIcon className='material-icons'>credit_card</FontIcon>} />\n                            <MenuItem primaryText='Settings' leftIcon={<FontIcon className='material-icons'>settings</FontIcon>} />\n                            <MenuItem primaryText='About' leftIcon={<FontIcon className=\"material-icons\">face</FontIcon>} />\n                        </Menu>\n                        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-end'}}>\n                            <FloatingActionButton onTouchTap={this.add} secondary={true} style={{position: 'relative', left: 25}}>\n                                <FontIcon className='material-icons'>add</FontIcon>\n                            </FloatingActionButton>\n                        </div>\n                    </Paper>\n                    <div style={{flex: 1, flexDirection: 'column', display: 'flex'}}>\n                        { this.props.searchState ?\n                            <Paper style={{zIndex: 1, padding: 10, paddingTop: 6, display: 'flex'}}  >\n                                <IconButton onTouchTap={this.search.bind(this, false)}><FontIcon className='material-icons'>arrow_back</FontIcon></IconButton>\n                                <TextField\n                                    value={this.props.searchQuery}\n                                    onChange={this.changeSearch}\n                                    ref={(input)=>{input && input.focus()}}\n                                    style={{marginLeft: 20, marginRight: 20}}\n                                    fullWidth={true}\n                                    name='searchfield'\n                                />\n                                {(this.props.searchQuery !== '') && <IconButton onTouchTap={this.resetSearchQuery}><FontIcon className='material-icons'>close</FontIcon></IconButton>}\n                            </Paper>\n                            :\n                            <AppBar\n                                iconElementLeft={this.props.showSingleEntry ?\n                                    <IconButton onTouchTap={this.back}><FontIcon className='material-icons'>arrow_back</FontIcon></IconButton>\n                                    : null}\n                                showMenuIconButton={this.props.showSingleEntry}\n                                iconElementRight={this.rightIcon()}\n                                title={<span>{\n                                    this.props.showSingleEntry ?\n                                    this.props.activeEntry.title :\n                                    this.props.activePage.title\n                                }</span>}\n                            />\n                        }\n                        <div style={{flex: 1, padding: 20, overflowY: 'scroll', background: this.props.theme.palette.secondaryCanvasColor }}>\n                            <Paper style={{padding: 20}}>\n                                {this.page()}\n                            </Paper>\n                        </div>\n                    </div>\n                </Paper>\n            )\n        }\n    }\n\n    render() {\n        const styles =   {\n            smallIcon: {\n                width: 20,\n                height: 20,\n                color: this.props.theme.palette.alternateTextColor,\n            },\n            small: {\n                width: 30,\n                height: 30,\n                padding: 5,\n                WebkitAppRegion: 'no-drag',\n            },\n        }\n    return (\n        <MuiThemeProvider muiTheme={getMuiTheme(this.props.theme)}>\n            {/* Top bar, always present, makes window dragable even if covered */}\n            <div style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n                <div style={{\n                    height: 30,\n                    WebkitAppRegion: 'drag', //make window dragable\n                    backgroundColor: this.props.theme.palette.primary2Color,\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                }} >\n                    <IconButton\n                        iconStyle={styles.smallIcon}\n                        style={styles.small}\n                        onTouchTap={this.minimize}><RemoveIcon /></IconButton>\n                    <IconButton\n                        iconStyle={styles.smallIcon}\n                        style={styles.small}\n                        onTouchTap={this.maximize}><AddIcon/></IconButton>\n                    <IconButton\n                        iconStyle={styles.smallIcon}\n                        style={styles.small}\n                        onTouchTap={this.close}><CloseIcon/></IconButton>\n                </div>\n                    {this.content()}\n                    <DeleteDialog />\n                    <AddDialog />\n            </div>\n        </MuiThemeProvider>\n    );\n    }\n}\n","// Here is the starting point of the application code.\n\n// Helpers\nimport './helpers/context_menu.js';\nimport './helpers/external_links.js';\n\n//React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n//React-Components\nimport Layout from './components/layout';\n\n// Needed for onTouchTap\n// This dependency by Material-UI is temporary and will eventually go away\n// http://stackoverflow.com/a/34015469/988941\nimport injectTapEventPlugin from 'react-tap-event-plugin';\n\n// Initialize onTouchTap\ninjectTapEventPlugin();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Layout />\n    </Provider>,\n    document.getElementById('app')\n);\n"],"names":["Menu","remote","MenuItem","isAnyTextSelected","window","getSelection","toString","cut","execCommand","copy","paste","normalMenu","append","textEditingMenu","document","addEventListener","event","target","nodeName","preventDefault","popup","getCurrentWindow","supportExternalLinks","href","isExternal","checkDomElement","element","getAttribute","classList","contains","openExternal","parentElement","reducer","state","_id","user","url","password","score","count","entries","action","type","payload","log","blue500","blue700","lightBlack","pinkA200","blueGrey100","blueGrey500","darkBlack","white","darken","grey300","fade","lightTheme","index","title","darkTheme","theme","combineReducers","middleware","applyMiddleware","thunk","logger","createStore","config","hashPassword","callback","randomBytes","saltBytes","err","salt","pbkdf2","iterations","hashBytes","hash","combined","Buffer","length","writeUInt32BE","verifyPassword","readUInt32BE","slice","verify","encrypt","text","cipher","crypto","createCipher","masterPassword","crypted","update","final","decrypt","decipher","createDecipher","dec","setMasterPassword","generatePassword","numLc","numUc","numDigits","numSpecial","lcLetters","ucLetters","toUpperCase","numbers","special","pass","i","push","getRand","shuffle","join","values","charAt","Math","floor","random","array","m","t","database","load","Datastore","fetch","query","dispatch","Promise","resolve","reject","find","docs","evaluate","map","item","result","zxcvbn","percentage","insert","entry","id","remove","setActiveEntry","findOne","doc","updateActiveEntry","setTheme","bool","setActivePage","pageNumber","pageTitle","editing","capslock","showDeleteDialog","showSingleEntry","showNewDialog","setSearchQuery","setSearchState","setHashedMasterPassword","Database","connect","store","activeEntry","searchState","securityScore","props","copyPassword","bind","delete","edit","content","writeText","wait","ms","setTimeout","r","then","onlyShowBadLogins","ListItem","activePage","toLowerCase","red400","marginRight","setActive","grey400","fontStyle","color","textAlign","React","Component","Dashboard","display","flex","width","height","position","palette","disabledColor","toFixed","borderTop","marginTop","paddingTop","spacing","cyan500","cyan700","grey600","pinkA400","pinkA100","fullWhite","Settings","PasswordSection","changePassword","showPassword","showOptional","pastePassword","genPassword","handleFirstSlider","handleSecondSlider","handleThirdSlider","handleFourthSlider","getModifierState","setState","passwordEval","clipboard","readText","lowercaseLetters","uppercaseLetters","digits","optional","value","faces","colors","red500","deepOrange500","orange500","green500","lightGreen500","strength","primary1Color","marginLeft","alignSelf","justifyContent","margin","fontSize","feedback","warning","suggestions","crack_times_display","offline_slow_hashing_1e4_per_second","alignItems","Entry","changeUrl","changeUser","changeTitle","changeType","changeNumber","changeCCV","changeDate","changeOutgoingMailServer","changeIncomingMailServer","changeServer","number","ccv","date","oms","ims","server","incomingMailServer","outgoingMailServer","overflow","About","letterSpacing","textColor","Login","hashedMasterPassword","submit","shaking","that","verified","Setup","changeFirstPassword","changeSecondPassword","onStart","secondPassword","firstPassword","app","appDir","jetpack","cwd","getAppPath","write","start","carousel","Slide","backgroundColor","red600","amber400","amber600","blue300","blue600","blueGrey900","equal","marginBottom","DeleteDialog","cancel","actions","AddDialog","add","BrowserWindow","require","Layout","newActiveEntry","searchQuery","badLogins","loaded","back","save","changeSearch","resetSearchQuery","read","undefined","primaryText","RegExp","getFocusedWindow","close","search","isMaximized","unmaximize","maximize","minimize","alternateTextColor","flexDirection","zIndex","borderRadius","background","padding","left","input","focus","rightIcon","overflowY","secondaryCanvasColor","page","styles","getMuiTheme","primary2Color","smallIcon","small","injectTapEventPlugin","ReactDOM","render","getElementById"],"mappings":"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"}